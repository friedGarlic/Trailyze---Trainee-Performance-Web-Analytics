@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row" style="position:absolute; top:200px;">
    <div class="col-md-7">
        <form id="registerForm" class="row" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3 py-2">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" id="passwordInput" class="form-control" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger" id="password-error"></span>
                <ul id="passwordErrors">
                    <li id="lengthError" style="display: none; Color: Red;">Password must be at least 8 and at most 16 characters long.</li>
                    <li id="specialCharError" style="display: none; Color: Red;">Password must contain at least 1 special character.</li>
                    <li id="numericCharError" style="display: none; Color: Red;">Password must contain at least 1 numerical character.</li>
                    <li id="lowercaseCharError" style="display: none; Color: Red;">Password must contain at least 1 lowercase letter.</li>
                </ul>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.FullName" class="form-control" aria-required="true" placeholder="password" />
                <label asp-for="Input.FullName">FullName</label>
                <span asp-validation-for="Input.FullName" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.Age" class="form-control" aria-required="true" placeholder="password" />
                <label asp-for="Input.Age">Age</label>
                <span asp-validation-for="Input.Age" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control" aria-required="true" placeholder="password" />
                <label asp-for="Input.PhoneNumber">Phone Number</label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>

            @if (Model.IsAdminRegistration)
            {
                <select asp-for="Input.Role" asp-items="@Model.Input.RoleList" class="form-select">
                    <option disabled selected>--Select Role--</option> 
                </select>
            }
            @if (ModelState.Any())
            {
                <div class="alert alert-danger">
                    <ul>
                        @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    @* <div class="col-md-5"> DISABLED THE EXTERNEAL SERVICES FOR NOW
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div> *@
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const passwordInput = document.getElementById('passwordInput');
        const passwordErrors = document.getElementById('passwordErrors');
        const lengthError = document.getElementById('lengthError');
        const specialCharError = document.getElementById('specialCharError');
        const numericCharError = document.getElementById('numericCharError');
        const lowercaseCharError = document.getElementById('lowercaseCharError');

        passwordInput.addEventListener('input', function () {
            const password = passwordInput.value;

            lengthError.style.display = password.length < 8 || password.length > 16 ? 'block' : 'none';
            specialCharError.style.display = /[^\w\s]/.test(password) ? 'none' : 'block';
            numericCharError.style.display = /\d/.test(password) ? 'none' : 'block';
            lowercaseCharError.style.display = /[a-z]/.test(password) ? 'none' : 'block';
        });
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
